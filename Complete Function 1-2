'''A collection of function for doing my project.'''

'''List of biology-related words to be randomly selected upon for the hangman game'''
words = ['allele', 'adaptation', 'anatomy', 'anaphase', 'anticodon', 'apoptosis', 'autotroph', 'bacteria','basepair', 'brain', 'cell', 'centromere', 'centrosome', 'chitin', 'chlorophyll', 'chloroplast', 'centriole', 'chromatid', 'CRISPR', 'cytokinesis', 'cytoplasm', 'cytoskeleton','diploid','disaccharide', 'DNA', 'evolution', 'enzyme', 'ecosystem', 'ectotherm', 'endotherm', 'epistasis', 'eukaryote', 'exon', 'exoskeleton', 'fungi', 'gamete', 'gene', 'genotype', 'genus', 'glycerol', 'glycolysis', 'haploid', 'heredity', 'homozygous', 'interphase', 'intron', 'lactase', 'ligand', 'metaphase', 'mitosis', 'meiosis', 'mRNA', 'nucleotide', 'organ', 'osmosis', 'organelle', 'phenotype', 'phospholipid', 'prokaryote', 'prophase', 'pyruvate', 'receptor', 'RNA', 'synapsis', 'systole', 'telomere', 'thymine', 'transcription', 'transferrin', 'translation', 'vacuole', 'vesicle', 'virus', 'xylem', 'phloem', 'zooplankton', 'zygote', 'ribosome']

import random  ##This module allows us down the line to randomly choose a word
import string ##Allows us to to change the case structure of all letters in the game

'''Creating a visualization of the cat hangman that progresses depending on lives left'''
cat={
        0: (
        "   ___________\n"
        "   | /        | \n"
        "   |/       /ᐠxꞈxᐟ\\\n"
        "   |       ฅ|    |ฅ\n"
        "   |       ฅ|____|ฅ\n"
        "   |          ꩜\n"
        "   |\n" ),
    1: (
        "   ___________\n"
        "   | /        | \n"
        "   |/       /ᐠxꞈxᐟ\\\n"
        "   |       ฅ|    |ฅ\n"
        "   |       ฅ|____|ฅ\n"
        "   |          \n"
        "   |\n"),
        2: (
        "   ___________\n"
        "   | /        | \n"
        "   |/       /ᐠxꞈxᐟ\\\n"
        "   |       ฅ|    |ฅ\n"
        "   |        |____|ฅ\n"
        "   |          \n"
        "   |\n"),
        3: (
        "   ___________\n"
        "   | /        | \n"
        "   |/       /ᐠxꞈxᐟ\\\n"
        "   |       ฅ|    |ฅ\n"
        "   |        |____|\n"
        "   |          \n"
        "   |\n"),
        4:  (
        "   ___________\n"
        "   | /        | \n"
        "   |/       /ᐠxꞈxᐟ\\\n"
        "   |       ฅ|    |\n"
        "   |        |____|\n"
        "   |          \n"
        "   |\n"),
        5: (
        "   ___________\n"
        "   | /        | \n"
        "   |/       /ᐠxꞈxᐟ\\\n"
        "   |        |    |\n"
        "   |        |____|\n"
        "   |          \n"
        "   |\n"),
        6: (
        "   ___________\n"
        "   | /        | \n"
        "   |/       /ᐠxꞈxᐟ\\\n"
        "   |        \n"
        "   |        \n"
        "   |          \n"
        "   |\n"),
        7: (
        "   ___________\n"
        "   | /        | \n"
        "   |/       /ᐠx xᐟ\\\n"
        "   |        \n"
        "   |        \n"
        "   |          \n"
        "   |\n"),
        8: (
        "   ___________\n"
        "   | /        | \n"
        "   |/       /ᐠ  ᐟ\\\n"
        "   |        \n"
        "   |        \n"
        "   |          \n"
        "   |\n"),
        9: (
        "   ___________\n"
        "   | /        | \n"
        "   |/       /ᐠ   \n"
        "   |        \n"
        "   |        \n"
        "   |          \n"
        "   |\n"),
        10: (
        "   ฅ(＾・ω・＾ฅ)"
        )}


'''Randomly selects a word from the generated list of biology-related words'''
def random_word(words):
    word = random.choice(words)  # randomly chooses something from the list
    return word.upper() # Returning it upper to keep everything uniform

'''The hangman game. Can be put into action via the syntax: cat_game()'''
def cat_game():
    word = random_word(words)
    secret_letters = set(word)  # letters in the word
    alphabet = set(string.ascii_uppercase)
    chosen = set()  #Empty list for chosen letters

    cat_lives = 9
    
    #print("You are a cat and you've found yourself in a sticky predicament! You're trapped in a scientist's laboratory and you need to guess his password to leave the room before it's too late! You can guess one letter at a time... but every wrong letter loses you one of your 9 lives! Can you escape?  (ꏿ ᆺ ꏿ) ")
          
    while len(secret_letters) > 0 and cat_lives > 0:
        print('        ')
        print(cat_lives, 'lives left! Past guesses: ', ' '.join(chosen))

        word_so_far = [letter if letter in chosen else '-' for letter in word]
        print(cat[cat_lives])
        print('Passcode = ', ' '.join(word_so_far)) #.join concatenates a string

        guess = input('Choose a letter --> ').upper() #This makes the input prompt box
        if guess in alphabet - chosen:
            chosen.add(guess)
            if guess in secret_letters:
                secret_letters.remove(guess)
                print('Yes! Good guess, almost got it!   —ฅ/ᐠ. ̫ .ᐟ\ฅ —  ') 
                print('        ')
            else:
                cat_lives = cat_lives - 1  # takes away a life if wrong
                print('Oh no, wrong guess! Keep trying!  /ᐠ・ᆽ・ᐟ \ ')
                print('        ')
                print('        ')
        elif guess in chosen:
            print('You already guessed that letter!')
            print('        ')
            print('        ')
        else:  #Error handling ; If a character not a letter, does not count guess
            print('Invalid character detected! Must guess a letter.')
            print('        ')
            print('        ')

    if cat_lives == 0:
        print(cat[0])
        print('RIP... The word was', word)
        print('        ')
        print(' /ᐠxꞈxᐟ\ ')
    else:
        print('  —ฅ/ᐠ. ̫ .ᐟ\ฅ — ')
        print('            ')
        print('Good job! You guessed the word', word,' with', cat_lives, 'lives to spare!')

        
questions_dict = {'WHAT IS O2?  ':'oxygen', 'WHAT IS H2O?  ':'water'}

def final_task(): 
    while True:
        random_q = random.choice(list(questions_dict.keys()))
        random_q_answer = list(questions_dict[random_q])

        answer = input(random_q).upper()

        if answer == random_q_answer:
            print('You escaped! Good job')
        elif not answer.isalpha():
            print('Guess must be in the form of a word!')       
        else:
            print('RIP the homie...')
     
